name: .NET 8 CI/CD Pipeline

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  publish-api:
    name: Build and Publish API
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore TaskWebApi/TaskWebApi.csproj

    - name: Build API project
      run: dotnet build TaskWebApi/TaskWebApi.csproj -c Release --no-restore

    - name: Publish API project
      run: dotnet publish TaskWebApi/TaskWebApi.csproj -c Release -o ./publish/api

  publish-mvc:
    name: Build and Publish MVC
    runs-on: ubuntu-latest
    needs: publish-api

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore TaskWebApiIntegration/TaskWebApiIntegration.csproj

    - name: Build MVC project
      run: dotnet build TaskWebApiIntegration/TaskWebApiIntegration.csproj -c Release --no-restore

    - name: Publish MVC project
      run: dotnet publish TaskWebApiIntegration/TaskWebApiIntegration.csproj -c Release -o ./publish/mvc

    - name: Notify Slack (optional)
      if: success()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "text": "âœ… CI/CD pipeline successful! Both *TaskWebApi* and *TaskWebApiIntegration* are published from *${{ github.repository }}* by *${{ github.actor }}* ðŸŽ‰"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
